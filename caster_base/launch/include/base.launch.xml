<?xml version="1.0"?>
<launch>
  <arg name="log_type" default="screen" />
  <arg name="base_version" default="v2" />
  <arg name="has_body" default="false" />
  <arg name="body_version" default="v1" />
  <arg name="laser_type" default="pavo" /> 
  <arg name="respawn" default="false" />

  <!-- Caster driver -->
  <node pkg="caster_base" type="caster_base_node" name="caster_base_node" output="$(arg log_type)" respawn="$(arg respawn)">
    <param name="base_baudrate" type="int" value="115200" />
    <param name="base_port" type="string" value="/dev/caster_base" />
    <param name="body_baudrate" type="int" value="115200" if="$(arg has_body)" />
    <param name="body_port" type="string" value="/dev/caster_body" if="$(arg has_body)" />
    <param name="body_joint" type="string" value="caster_body_connected_joint" if="$(arg has_body)" />
    <param name="left_wheel_joint" type="string" value="drive_wheel_left_joint" />
    <param name="right_wheel_joint" type="string" value="drive_wheel_right_joint" />
    <remap from="/caster/drive_controller/odom" to="/odom" />
    <remap from="/caster/drive_controller/cmd_vel" to="/cmd_vel" />
  </node>

  <!-- Caster MCU driver -->
  <node pkg="caster_base" type="caster_mcu_node" name="caster_mcu_node" respawn="$(arg respawn)" output="$(arg log_type)">
    <param name="baudrate" type="int" value="115200" />
    <param name="port" type="string" value="/dev/caster_mcu" />
  </node>

  <!-- Imu driver -->
  <node pkg="jy901_driver" type="jy901_driver_node" name="jy901_node" output="$(arg log_type)" respawn="$(arg respawn)">
    <param name="baudrate" type="int" value="115200" />
    <param name="port" type="string" value="/dev/caster_imu" />
    <param name="looprate" type="int" value="30" />
    <remap from="imu/data" to="imu_data" />
  </node>

  <!-- Laser driver and filter -->
  <node name="PavoScanNode" pkg="pavo_ros" type="pavo_scan_node" output="screen" respawn="$(arg respawn)" if="$(eval arg('laser_type')=='pavo')">
    <param name="frame_id" type="string" value="laser_link" />
    <param name="scan_topic" type="string" value="scan" />
    <param name="angle_min" type="double" value="-65.00" />
    <param name="angle_max" type="double" value="65.00" />
    <param name="range_min" type="double" value="0.10" />
    <param name="range_max" type="double" value="20.0" />
    <param name="inverted" type="bool" value="false" />
    <param name="enable_motor" type="bool" value="true" />
    <param name="motor_speed" type="int" value="30" />
    <param name="merge_coef" type="int" value="1" />
    <param name="lidar_ip" type="string" value="192.168.33.7" />
    <param name="lidar_port" type="int" value="2368" />
    <param name="method" type="int" value="0" />
    <param name="switch_active_mode" type="bool" value="false" />
    <remap from="/PavoScanNode/scan" to="/scan" />
  </node>

  <node pkg="urg_node" type="urg_node" name="urg_node" output="$(arg log_type)" if="$(eval arg('laser_type')=='hokuyo')">
    <param name="ip_address" value="192.168.33.7" />
    <param name="frame_id" value="laser_link" />
    <param name="calibrate_time" value="false" />
    <param name="publish_intensity" value="true" />
    <param name="publish_multiecho" value="false" />
    <param name="angle_min" value="-1.4835299" />
    <param name="angle_max" value="1.4835299" />
  </node>

  <!-- RPlidar driver and filter-->
  <node pkg="rplidar_ros" type="rplidarNode" name="rplidarNode" output="$(arg log_type)" respawn="$(arg respawn)">
    <param name="serial_port"         type="string" value="/dev/rplidar"/>
    <param name="serial_baudrate"     type="int"    value="115200"/>
    <param name="frame_id"            type="string" value="laser_link2"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
    <remap from="scan" to="scan_2"/>
  </node>
  
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="tilt_shadow_filter" output="$(arg log_type)" respawn="$(arg respawn)">
    <rosparam command="load" file="$(find caster_base)/config/laser_2_filter.yaml" />
    <remap from="scan" to="scan_2" />
    <remap from="scan_filtered" to="scan_2_filtered" />
  </node>

  <!-- BMS driver -->
<!--   <node pkg="hongfu_bms_status" type="hongfu_bms_status_node" name="hongfu_bms_status_node" output="screen">
    <param name="looprate" type="int" value="1" />
    <param name="baudrate" type="int" value="9600" />
    <param name="port" type="string" value="/dev/caster_bms" />
    <param name="frame_id" type="string" value="hongfu_bms" />
    <remap from="/hongfu_bms_status/hongfu_bms" to="/bms"/>
  </node>
 -->

  <!-- Ultrasonic sensor driver -->
  <node pkg="dauxi_ks106" type="dauxi_ks106_node" name="dauxi_ks106_node" output="screen" respawn="$(arg respawn)">
    <param name="port" type="string" value="/dev/caster_sonar" />
    <param name="baudrate" type="int" value="9600" />
    <param name="frequency" type="int" value="10" />
    <param name="min_range" type="double" value="0.20" />
    <param name="max_range" type="double" value="1.50" />
    <param name="topic" type="string" value="us" />
    <param name="us1_id" type="string" value="ultrasonic_front_left" />
    <param name="us2_id" type="string" value="ultrasonic_front_right" />
    <param name="us3_id" type="string" value="ultrasonic_rear_right" />
    <param name="us4_id" type="string" value="ultrasonic_rear_left" />
  </node>

  <!-- Robot pose EKF -->
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" output="$(arg log_type)" respawn="$(arg respawn)">
    <param name="output_frame" value="odom" />
    <param name="base_footprint_frame" value="base_footprint" />
    <param name="freq" value="30" />
    <param name="sensor_timeout" value="1.0" />
    <param name="odom_used" value="true" />
    <param name="imu_used" value="true" />
    <param name="vo_used" value="false" />
    <param name="debug" value="false" />
    <param name="self_diagnose" value="false" />
  </node>

  <!-- controller -->
  <include file="$(find caster_control)/launch/control.launch">
    <arg name="log_type" value="$(arg log_type)" />
    <arg name="base_version" value="$(arg base_version)" />
    <arg name="has_body" value="$(arg has_body)" />
    <arg name="body_version" value="$(arg body_version)" />
  </include>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="$(arg log_type)" respawn="$(arg respawn)">
    <!-- <param name="publish_frequency" type="double" value="50" /> -->
  </node>
</launch>

